pipeline {
    agent { label ('JAVA_17') }
    triggers { pollSCM ('* * * * *') }
    stages {
        stage('VCS') {
            steps {
                git url: 'https://github.com/avsrpavankalyan/spring-petclinic.git',
                    branch: 'main'
            }
        }
        stage('MVN PACKAGE') {
            steps {
                sh './mvnw package'
            }
        }
        stage('SONAR QUBE') {
            steps {
                // performing sonarqube analysis with "withSonarQubeENV(<Name of Server configured in Jenkins>)"
                withSonarQubeEnv('SonarQubekalyan') 
                sh './mvnw clean package sonar:sonar -Dsonar.organization=SonarQubekalyan '
            }
        }
    }
}